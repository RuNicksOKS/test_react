version: '3.7'

services:
  backend-prod:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: "backend-app-prod"
    command: gunicorn app.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/api/static
    networks:
      - prod
    expose:
      - 8000
    env_file:
      - ./env/.env.prod
    depends_on:
      - db-prod

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: "frontend"
    volumes:
      - static_volume:/home/app/web/api/static
    networks:
      - prod
    ports:
      - 80:80
    environment:
      - NODE_ENV=production
    depends_on:
      - "backend-prod"

  db-prod:
    # image: postgres:13.2-alpine
    image: postgres:15.3-alpine
    container_name: "db-prod"
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - prod
    env_file:
      - ./env/.env.prod.db

volumes:
  postgres_data_prod:
  static_volume:

networks:
  prod:
